#1 task
n = 100  # Максимальне значення для a, b, c

for a in range(1, n+1):
    for b in range(a, n+1):
        c = (a**2 + b**2) ** 0.5
        if c.is_integer() and c <= n:
            print(f"({a}, {b}, {int(c)})")
#2 task
n = 10  # Кількість рядків трикутника Паскаля

def pascal_triangle(rows):
    triangle = [[1]]
    for i in range(1, rows):
        row = [1]
        for j in range(1, i):
            row.append(triangle[i-1][j-1] + triangle[i-1][j])
        row.append(1)
        triangle.append(row)
    return triangle

triangle = pascal_triangle(n)
for row in triangle:
    print(row)

#3 task
n = 1000

def sieve_of_eratosthenes(limit):
    primes = [True] * (limit + 1)
    p = 2
    while p**2 <= limit:
        if primes[p]:
            for i in range(p**2, limit + 1, p):
                primes[i] = False
        p += 1
    return [p for p in range(2, limit + 1) if primes[p]]

prime_numbers = sieve_of_eratosthenes(n)
print(prime_numbers)

#4 task
def prime_factors(n):
    factors = []
    divisor = 2
    while n >= 2:
        if n % divisor == 0:
            factors.append(divisor)
            n //= divisor
        else:
            divisor += 1
    return factors

n = 250
factors = prime_factors(n)
print(f"Прості множники числа {n}: {factors}")

#5 task
def is_palindrome(num):
    return str(num) == str(num)[::-1]

for i in range(1, 100):
    if is_palindrome(i) and is_palindrome(i**2):
        print(f"{i} і його квадрат {i**2} — паліндром")

#6 task
from num2words import num2words  # Потрібно встановити бібліотеку: pip install num2words

n = 345  # Число для запису словами
print(num2words(n, lang='uk'))

#7 task
def twin_primes(n):
    primes = sieve_of_eratosthenes(2 * n)
    twins = [(p, p + 2) for p in primes if p + 2 in primes and p >= n]
    return twins

n = 50
twin_prime_pairs = twin_primes(n)
print(f"Пари простих чисел-близнюків між {n} і {2*n}: {twin_prime_pairs}")

#8 task
text = """Це перший абзац тексту. Він має бути заголовком.
Другий абзац починається тут і продовжує текст."""

def format_text_as_header(text):
    paragraphs = text.split('\n')
    paragraphs[0] = f"# {paragraphs[0]}"  # Робимо перший абзац заголовком
    return '\n'.join(paragraphs)

formatted_text = format_text_as_header(text)
print(formatted_text)

#9 task


